{"version":3,"sources":["Components/FontsArray.js","Components/FormEdit.js","Views/Home.js","img/csslogo.png","Components/NavBar.js","App.js","index.js"],"names":["FontsArray","FormEdit","useState","exampleText","setExampleText","fontSize","setFontSize","textColor","setTextColor","backgroundColor","setbackgroundColor","fontFamily","setFontFamily","typewriter","setTypewriter","neon","setNeon","glitch","setGlitch","loading","setloading","console","log","document","querySelector","Form","className","Group","style","textAlign","controlId","Label","Control","placeholder","type","rows","onChange","e","target","value","as","map","font","placeHolder","margin","textDecoration","Check","label","color","classnames","marginTop","Home","NavBar","inBeta","Navbar","bg","variant","Brand","href","alt","src","logo","width","height","App","ReactDOM","render","getElementById"],"mappings":"oNAsHeA,EAtHE,CACb,OACA,QACA,cACA,cACA,UACA,UACA,eACA,UACA,gBACA,WACA,aACA,SACA,cACA,SACA,yBACA,WACA,SACA,UACA,uBACA,SACA,WACA,gBACA,gBACA,iBACA,sBACA,gBACA,UACA,qBACA,qBACA,wBACA,oBACA,uBACA,mBACA,kBACA,qBACA,eACA,kBACA,YACA,UACA,eACA,aACA,oBACA,oBACA,cACA,eACA,WACA,oBACA,iBACA,kBACA,SACA,QACA,UACA,SACA,SACA,kBACA,sBACA,cACA,QACA,cACA,eACA,wBACA,mBACA,SACA,cACA,wBACA,cACA,aACA,YACA,qBACA,sBACA,eACA,kBACA,aACA,gBACA,cACA,UACA,SACA,gBACA,cACA,UACA,cACA,QACA,gBACA,gBACA,SACA,SACA,UACA,YACA,YACA,iBACA,aACA,eACA,SACA,gBACA,WACA,cACA,QACA,uBACA,SACA,aACA,SACA,WACA,UACA,YACA,WACA,aACA,cACA,OACA,kBACA,SACA,QACA,kBACA,cACA,eACA,UACA,W,uBCZWC,MAnGf,WACI,MAAsCC,mBAAuB,QAA7D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,mBAAS,SAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAoCR,mBAAS,QAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAoCV,oBAAS,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwBZ,oBAAS,GAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAA4Bd,oBAAS,GAArC,mBAAOe,EAAP,KAAeC,EAAf,KACA,EAA8BhB,oBAAS,GAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,QAAQC,IAAInB,GACOoB,SAASC,cAAc,eACtBD,SAASC,cAAc,gBAEvC,gCACI,eAACC,EAAA,EAAD,CAAMC,UAAU,UAAhB,UACI,e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","file":"static/js/main.1e651c1b.chunk.js","sourcesContent":["var FontsArray = [\n    'None',\n    'Arial',\n    'Arial Black',\n    'Bahnschrift',\n    'Calibri',\n    'Cambria',\n    'Cambria Math',\n    'Candara',\n    'Comic Sans MS',\n    'Consolas',\n    'Constantia',\n    'Corbel',\n    'Courier New',\n    'Ebrima',\n    'Franklin Gothic Medium',\n    'Gabriola',\n    'Gadugi',\n    'Georgia',\n    'HoloLens MDL2 Assets',\n    'Impact',\n    'Ink Free',\n    'Javanese Text',\n    'Leelawadee UI',\n    'Lucida Console',\n    'Lucida Sans Unicode',\n    'Malgun Gothic',\n    'Marlett',\n    'Microsoft Himalaya',\n    'Microsoft JhengHei',\n    'Microsoft New Tai Lue',\n    'Microsoft PhagsPa',\n    'Microsoft Sans Serif',\n    'Microsoft Tai Le',\n    'Microsoft YaHei',\n    'Microsoft Yi Baiti',\n    'MingLiU-ExtB',\n    'Mongolian Baiti',\n    'MS Gothic',\n    'MV Boli',\n    'Myanmar Text',\n    'Nirmala UI',\n    'Palatino Linotype',\n    'Segoe MDL2 Assets',\n    'Segoe Print',\n    'Segoe Script',\n    'Segoe UI',\n    'Segoe UI Historic',\n    'Segoe UI Emoji',\n    'Segoe UI Symbol',\n    'SimSun',\n    'Sitka',\n    'Sylfaen',\n    'Symbol',\n    'Tahoma',\n    'Times New Roman',\n    'American Typewriter',\n    'Andale Mono',\n    'Arial',\n    'Arial Black',\n    'Arial Narrow',\n    'Arial Rounded MT Bold',\n    'Arial Unicode MS',\n    'Avenir',\n    'Avenir Next',\n    'Avenir Next Condensed',\n    'Baskerville',\n    'Big Caslon',\n    'Bodoni 72',\n    'Bodoni 72 Oldstyle',\n    'Bodoni 72 Smallcaps',\n    'Bradley Hand',\n    'Brush Script MT',\n    'Chalkboard',\n    'Chalkboard SE',\n    'Chalkduster',\n    'Charter',\n    'Cochin',\n    'Comic Sans MS',\n    'Copperplate',\n    'Courier',\n    'Courier New',\n    'Didot',\n    'DIN Alternate',\n    'DIN Condensed',\n    'Futura',\n    'Geneva',\n    'Georgia',\n    'Gill Sans',\n    'Helvetica',\n    'Helvetica Neue',\n    'Herculanum',\n    'Hoefler Text',\n    'Impact',\n    'Lucida Grande',\n    'Luminari',\n    'Marker Felt',\n    'Menlo',\n    'Microsoft Sans Serif',\n    'Monaco',\n    'Noteworthy',\n    'Optima',\n    'Palatino',\n    'Papyrus',\n    'Phosphate',\n    'Rockwell',\n    'Savoye LET',\n    'SignPainter',\n    'Skia',\n    'Snell Roundhand',\n    'Tahoma',\n    'Times',\n    'Times New Roman',\n    'Trattatello',\n    'Trebuchet MS',\n    'Verdana',\n    'Zapfino',\n];\nexport default FontsArray","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport FontsArray from './FontsArray'\nimport classnames from 'classnames'\n\nfunction FormEdit() {\n    const [exampleText, setExampleText] = useState('' ? \"Text\" : \"Text\")\n    const [fontSize, setFontSize] = useState(20)\n    const [textColor, setTextColor] = useState(\"black\")\n    const [backgroundColor, setbackgroundColor] = useState(\"\")\n    const [fontFamily, setFontFamily] = useState(\"none\")\n    const [typewriter, setTypewriter] = useState(false)\n    const [neon, setNeon] = useState(false)\n    const [glitch, setGlitch] = useState(false)\n    const [loading, setloading] = useState(false)\n    console.log(exampleText)\n    const background = document.querySelector(\".background\")\n    const betaWarning = document.querySelector(\".betaWarning\")\n    return (\n        <div>\n            <Form className=\"formDiv\">\n                <Form.Group style={{ textAlign: \"center\" }} controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label >Text</Form.Label>\n                    <Form.Control style={{ textAlign: \"center\" }} placeholder=\"Enter Text Here\" type=\"text\" rows={2}\n                        onChange={(e) => {\n                            setExampleText(e.target.value)\n                        }} />\n                </Form.Group>\n                <Form.Group style={{ textAlign: \"center\" }} controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Text Color</Form.Label>\n                    <Form.Control style={{ textAlign: \"center\" }} type=\"text\" placeholder=\"black\" onChange={(e) => {\n                        setTextColor(e.target.value)\n                    }} />\n                </Form.Group>\n                <Form.Group style={{ textAlign: \"center\" }} controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Background Color</Form.Label>\n                    <Form.Control style={{ textAlign: \"center\" }} type=\"text\" placeholder=\"white\" onChange={(e) => {\n                        setbackgroundColor(e.target.value)\n                    }} />\n                </Form.Group>\n                <Form.Group style={{ textAlign: \"center\" }} controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Font</Form.Label>\n                    <Form.Control as=\"select\" onChange={(e) => {\n                        setFontFamily(e.target.value)\n                    }} >\n                        {FontsArray.map((font) =>\n                            (<option>{font}</option>)\n                        )}\n                    </Form.Control>\n                </Form.Group>\n                <Form>\n                    <Form.Group style={{ textAlign: \"center\" }} controlId=\"formBasicRange\">\n                        <Form.Label >Font Size</Form.Label>\n                        <Form.Control style={{ textAlign: \"center\" }} type=\"text\" placeHolder=\"# of pixels\" onChange={(e) => {\n                            setFontSize(e.target.value)\n                        }} />\n                        Value: {fontSize}px\n                    </Form.Group>\n                </Form>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Label style={{ margin: \"auto\", textDecoration: \"underline\" }}>Animations</Form.Label>\n                    <Form.Check type=\"checkbox\" label=\"Typewriter Animation\" onChange={() => setTypewriter(!typewriter)} />\n                    <Form.Check type=\"checkbox\" label=\"Neon Sign\" onChange={() => setNeon(!neon)} />\n                    <Form.Check type=\"checkbox\" label=\"Glitchy Text\" onChange={() => setGlitch(!glitch)} />\n                    <Form.Check type=\"checkbox\" label=\"Loading\" onChange={() => setloading(!loading)} />\n                </Form.Group>\n            </Form>\n            {}\n            <div className={loading !== true ? \"textContainer\" : \"loadingTextContainer\"}\n                style={{\n                    fontFamily: fontFamily,\n                    color: textColor,\n                    backgroundColor: backgroundColor,\n                    fontSize: fontSize + \"px\"\n                }}>\n                <div className={classnames({\n                    \"typewriter\": typewriter,\n                    \"neon\": neon,\n                    \"glitch\": glitch,\n                    \"loading\": loading,\n                })}>{loading ? (<span>{exampleText}</span>) : <p>{exampleText}</p>}</div>\n            </div>\n\n            <h3 style={{ textAlign: \"center\", marginTop: \"10px\" }}>CSS Code</h3>\n            <div className=\"cssCodeContainer\">\n                <h2 style={{ textAlign: \"center\" }}>This will display all CSS code for the options selected. Coming Soon</h2>\n                {/* <p>\n                    {\".className\" + \" \\{\"}\n                    < br />\n                    {textColor ? \"color:\" + textColor + \";\" : ''}\n                    <br />\n                    {backgroundColor ? \"backgroundColor:\" + backgroundColor + \";\" : ''}\n                    <br />\n                    {fontSize ? \"fontSize:\" + fontSize + \";\" : ''}\n                    <br />\n                    {fontFamily !== \"none\" ? \"fontFamily:\" + fontFamily + \";\" : ''}\n                    <br />\n                    {\"\\}\"}\n                </p> */}\n            </div>\n        </div >\n    )\n}\n\nexport default FormEdit\n","import React from 'react'\nimport FormEdit from '../Components/FormEdit'\n\n\nfunction Home() {\n\n\n    return (\n        <div className=\"home\">\n\n            <FormEdit />\n\n        </div>\n    )\n}\n\nexport default Home\n","export default __webpack_public_path__ + \"static/media/csslogo.19c8605d.png\";","import React, { useState } from 'react'\nimport Navbar from 'react-bootstrap/navbar'\nimport logo from '../img/csslogo.png'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction NavBar() {\n    const [inBeta, setInBeta] = useState(true)\n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">\n                    <img\n                        alt=\"\"\n                        src={logo}\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                    />{' '}\n                    {!inBeta ? \"CSS Text Manipulator\" : \"CSS Text Manipulator Beta\"}\n                </Navbar.Brand>\n            </Navbar>\n        </>\n    )\n}\n\nexport default NavBar\n","import './App.css';\nimport Home from \"./Views/Home\"\nimport NavBar from \"./Components/NavBar\"\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}